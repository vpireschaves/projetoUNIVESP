# Generated by Django 4.2.11 on 2025-05-17 00:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rh', '0001_initial'),
        ('veiculos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CentroCusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('codigo', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContaBancaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(max_length=100)),
                ('agencia', models.CharField(max_length=20)),
                ('numero_conta', models.CharField(max_length=50, unique=True)),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('saldo_atual', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('ativa', models.BooleanField(default=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContaCartao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bandeira', models.CharField(max_length=50)),
                ('numero_final', models.CharField(max_length=4)),
                ('tipo', models.CharField(choices=[('credito', 'Crédito'), ('debito', 'Débito')], max_length=10)),
                ('titular', models.CharField(blank=True, max_length=100, null=True)),
                ('ativa', models.BooleanField(default=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContaContabil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa'), ('ativo', 'Ativo'), ('passivo', 'Passivo'), ('patrimonio_liquido', 'Patrimônio Líquido')], max_length=20)),
                ('codigo', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('aceita_lancamentos', models.BooleanField(default=True)),
                ('conta_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcontas', to='financeiro.contacontabil')),
            ],
        ),
        migrations.CreateModel(
            name='NotaFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída')], max_length=10)),
                ('numero', models.CharField(max_length=50)),
                ('serie', models.CharField(blank=True, max_length=20, null=True)),
                ('data_emissao', models.DateField()),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('arquivo_xml', models.FileField(blank=True, null=True, upload_to='notas_fiscais/xml/')),
                ('arquivo_pdf_danfe', models.FileField(blank=True, null=True, upload_to='notas_fiscais/danfe/')),
                ('observacoes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_razao_social', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('fisica', 'Pessoa Física'), ('juridica', 'Pessoa Jurídica')], max_length=10)),
                ('cpf_cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('celular', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cep', models.CharField(blank=True, max_length=8, null=True)),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('estado', models.CharField(blank=True, max_length=2, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('pessoa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='cliente_info', serialize=False, to='financeiro.pessoa')),
                ('limite_credito', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('pessoa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='fornecedor_info', serialize=False, to='financeiro.pessoa')),
                ('prazo_pagamento_padrao', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LancamentoFinanceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_lancamento', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa')], max_length=10)),
                ('data_vencimento', models.DateField()),
                ('data_competencia', models.DateField(blank=True, null=True)),
                ('data_pagamento_recebimento', models.DateField(blank=True, null=True)),
                ('valor_original', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('valor_quitado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('aberto', 'Aberto'), ('quitado', 'Quitado'), ('cancelado', 'Cancelado')], default='aberto', max_length=10)),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('abastecimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='veiculos.abastecimento')),
                ('centro_custo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos', to='financeiro.centrocusto')),
                ('conta_bancaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos', to='financeiro.contabancaria')),
                ('conta_cartao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos', to='financeiro.contacartao')),
                ('conta_contabil', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lancamentos', to='financeiro.contacontabil')),
                ('historico_pagamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='rh.historicopagamento')),
                ('manutencao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='veiculos.manutencao')),
                ('nota_fiscal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos', to='financeiro.notafiscal')),
                ('pessoa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos_financeiros', to='financeiro.pessoa')),
            ],
        ),
        migrations.AddField(
            model_name='notafiscal',
            name='cliente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_fiscais_saida', to='financeiro.cliente'),
        ),
        migrations.AddField(
            model_name='notafiscal',
            name='fornecedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_fiscais_entrada', to='financeiro.fornecedor'),
        ),
        migrations.AlterUniqueTogether(
            name='notafiscal',
            unique_together={('tipo', 'numero', 'serie', 'fornecedor', 'cliente')},
        ),
    ]
